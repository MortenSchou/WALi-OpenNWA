## ##########################
## Build Example parser
import os,os.path

Import('WaliDir')
Import('LibInstallDir')
Import('BaseEnv')
Import('MkStatic')
Import('XercesDir')

XercesPath = os.path.join(WaliDir, 'AddOns', 'Parse', 'ThirdParty', XercesDir)

StaticLibs = []
Libs       = [ 'wali', 'waliparse', 'xerces-c', ] 
LibPath    = [ LibInstallDir ]

if MkStatic:
  	StaticLibs = [
    	os.path.join(LibInstallDir,'libwaliparse.a'),
    	os.path.join(LibInstallDir,'libwali.a'),
		os.path.join(LibInstallDir,'libxerces-c.a'),
    ]
	Libs = []
	LibPath = []


## ###############################
## Environment
env = BaseEnv.Clone(
    CPPPATH  = [
      os.path.join(WaliDir, 'Source'),
      os.path.join(WaliDir, 'AddOns', 'Parse', 'Source'),
      os.path.join(XercesPath, 'include'),
    ],
    LIBS     = Libs,
    LIBPATH  = LibPath
)

# Used to record the tests that are built
built = []

# Reach weight domain example
ReachFiles= Split("""
Reach/ExMain.cpp
Reach/Reach.cpp
""")
Reach = env.Program('ExMain',ReachFiles + StaticLibs)
built = Reach

Return('built')

