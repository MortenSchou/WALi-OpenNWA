# Build the waliparse library
import os

print "\n+++ Building waliparse library."

Debug = 1

Import('WaliDir')
Import('LibInstallDir')

if Debug:
    print "+ WaliDir       : '%s'" % WaliDir
    print "+ LibInstallDir : '%s'" % LibInstallDir 


waliparse_files = Split("""
./wali/wpds/ewpds/EWpdsHandler.cpp
./wali/wpds/ewpds/MergeFactory.cpp
./wali/wpds/WpdsHandler.cpp
./wali/wfa/WfaHandler.cpp
./wali/QueryHandler.cpp
./wali/Parser.cpp
./StrX.cpp
""")

env = Environment()

# Define include directories
IncludeDirs = [
    os.path.join(WaliDir , 'Source'),
    os.path.join(WaliDir,'AddOns','Parse','Source'),
    os.path.join(WaliDir,'AddOns','Parse','ThirdParty','xerces-c','include'),
]

if Debug:
    for i in IncludeDirs:
        print "+ Inlude        : %s" % i

env['CPPPATH'] = IncludeDirs

if 'gcc' == env['CC']:
    env['CXXFLAGS'] = '-g -ggdb -Wall -Wformat=2 -W'
elif 'cl' == env['CC']:
    # Mostly copied from VS C++ 2005 Command line
    env['CXXFLAGS'] = '/TP /errorReport:prompt /Wp64 /W4 /GR /MTd /EHsc'

waliparse = env.SharedLibrary('waliparse' , waliparse_files)

env.Install(LibInstallDir, waliparse)

