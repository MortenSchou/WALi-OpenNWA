Import('ProgEnv')
Import('BinInstallDir')

env = ProgEnv.Clone()


def _ProgramTarget(env, command, function, source):
    if function == None:
        function = command
    assert 'CPPDEFINES' not in env
    obj = env.Object('nwa-%s' % command, source,
                     CPPDEFINES={'CONSTRUCTION_FUNCTION': function,
                                 'CONSTRUCTION_NAMESPACE' : 'construct'})
    prg = env.Program('nwa-%s.exe' % command, obj)
    return prg

def SingleProgramTarget(env, command, function=None):
    return _ProgramTarget(env, command, function, 'single-nwa-command.cpp')

def DoubleProgramTarget(env, command, function=None):
    return _ProgramTarget(env, command, function, 'double-nwa-command.cpp')


built = [
    env.Program('nwa-print-dot.exe', ['print-dot.cpp']),
    env.Program('nwa-is-empty.exe', ['is-empty.cpp']),
    env.Program('nwa-is-member.exe', ['is-member.cpp']),

    DoubleProgramTarget(env, 'intersect'),
    DoubleProgramTarget(env, 'union', 'unionNWA'),
    DoubleProgramTarget(env, 'concatenate'),

    SingleProgramTarget(env, 'star'),
    SingleProgramTarget(env, 'complement'),
    SingleProgramTarget(env, 'determinize'),
    SingleProgramTarget(env, 'reverse'),
]

i = env.Install(BinInstallDir, built)

built = i
Return('built')

# Yo emacs!
# Local Variables:
#   mode: python
# End:
