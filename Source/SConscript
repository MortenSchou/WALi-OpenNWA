# Build wali library
import os

Import('WaliDir')
Import('LibInstallDir')

# `find . -name "*.cpp"`, then remove Experimental.cpp
wali_files = Split("""
./wali/StringSource.cpp
./wali/Common.cpp
./wali/util/StringUtils.cpp
./wali/util/ParseArgv.cpp
./wali/util/Timer.cpp
./wali/WeightFactory.cpp
./wali/KeyPairSource.cpp
./wali/wpds/RuleFunctor.cpp
./wali/wpds/Config.cpp
./wali/wpds/ewpds/ERule.cpp
./wali/wpds/ewpds/EWPDS.cpp
./wali/wpds/ewpds/MergeFunction.cpp
./wali/wpds/Rule.cpp
./wali/wpds/fwpds/FWPDS.cpp
./wali/wpds/LinkedTrans.cpp
./wali/wpds/Wrapper.cpp
./wali/wpds/DebugWPDS.cpp
./wali/wpds/WPDS.cpp
./wali/SemElemPair.cpp
./wali/KeySpace.cpp
./wali/TotalOrderWorklist.cpp
./wali/SemElem.cpp
./wali/PriorityWorklist.cpp
./wali/Exception.cpp
./wali/wfa/State.cpp
./wali/wfa/WFA.cpp
./wali/wfa/Trans.cpp
./wali/wfa/WeightMaker.cpp
./wali/wfa/TransFunctor.cpp
./wali/wfa/TransSet.cpp
./wali/Printable.cpp
./wali/witness/WitnessExtend.cpp
./wali/witness/WitnessWrapper.cpp
./wali/witness/WitnessRule.cpp
./wali/witness/Visitor.cpp
./wali/witness/WitnessMergeFn.cpp
./wali/witness/VisitorDot.cpp
./wali/witness/WitnessTrans.cpp
./wali/witness/VisitorPrinter.cpp
./wali/witness/Witness.cpp
./wali/witness/WitnessCombine.cpp
./wali/witness/WitnessMerge.cpp
./wali/Key.cpp
./wali/IntSource.cpp
./wali/Markable.cpp
./wali/graph/RegExp.cpp
./wali/graph/SummaryGraph.cpp
./wali/graph/Graph.cpp
./wali/graph/InterGraph.cpp
./wali/graph/LinkEval.cpp
./wali/graph/IntraGraph.cpp
""")

env = Environment()

print "!!!!!!!!!! WD : %s" % WaliDir

env['CPPPATH'] = [ 
  os.path.join(WaliDir , 'Source'), 
]

if 'gcc' == env['CC']:
    env['CXXFLAGS'] = '-g -ggdb -Wall -Wformat=2 -W'
elif 'cl' == env['CC']:
    # Mostly copied from VS C++ 2005 Command line
    env['CXXFLAGS'] = '/TP /errorReport:prompt /Wp64 /W4 /GR /MTd /EHsc'

wali = env.SharedLibrary('wali' , wali_files)

env.Install(LibInstallDir, wali)

