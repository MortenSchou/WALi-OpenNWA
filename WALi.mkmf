<?xml version='1.0' encoding='UTF-8'?>
<mkmf xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
           xmlns='http://www.cs.wisc.edu/~kidd/mkmf/'
           xsi:schemaLocation='http://www.cs.wisc.edu/~kidd/mkmf/
           http://www.cs.wisc.edu/~kidd/mkmf/mkmf.xsd'
           Default='wali' RelativePath='.' Name='WALi'>

    <Project Name='wali' RelativePath='Source'
        OutputDir='lib' BuildDir='objects' Type='Library' >
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='WALiDir' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <!-- WALi -->
            <item Name='Common' RelativePath='wali/Common.cpp' />
            <item Name='Markable' RelativePath='wali/Markable.cpp' />
            <item Name='Printable' RelativePath='wali/Printable.cpp' />
            <item Name='SemElem' RelativePath='wali/SemElem.cpp' />
            <item Name='SemElemPair' RelativePath='wali/SemElemPair.cpp' />
            <item Name='WeightFactory' RelativePath='wali/WeightFactory.cpp' />
            <item Name='PriorityWorklist' RelativePath='wali/PriorityWorklist.cpp' />
            <item Name='TotalOrderWorklist' RelativePath='wali/TotalOrderWorklist.cpp' />
            <item Name='Key' RelativePath='wali/Key.cpp' />
            <item Name='KeySpace' RelativePath='wali/KeySpace.cpp' />
            <item Name='IntSource' RelativePath='wali/IntSource.cpp' />
            <item Name='StringSource' RelativePath='wali/StringSource.cpp' />
            <item Name='KeyPairSource' RelativePath='wali/KeyPairSource.cpp' />
            <!-- WFA -->
            <item Name='WFA' RelativePath='wali/wfa/WFA.cpp' />
            <item Name='State' RelativePath='wali/wfa/State.cpp' />
            <item Name='Trans' RelativePath='wali/wfa/Trans.cpp' />
            <item Name='TransFunctor' RelativePath='wali/wfa/TransFunctor.cpp' />
            <item Name='TransSet' RelativePath='wali/wfa/TransSet.cpp' />
            <item Name='WeightMaker' RelativePath='wali/wfa/WeightMaker.cpp' />
            <!-- WPDS -->
            <item Name='Config' RelativePath='wali/wpds/Config.cpp' />
            <item Name='Rule' RelativePath='wali/wpds/Rule.cpp' />
            <item Name='RuleFunctor' RelativePath='wali/wpds/RuleFunctor.cpp' />
            <item Name='LinkedTrans' RelativePath='wali/wpds/LinkedTrans.cpp' />
            <item Name='WPDS' RelativePath='wali/wpds/WPDS.cpp' />
            <item Name='Wrapper' RelativePath='wali/wpds/Wrapper.cpp' />
            <!-- EWPDS -->
            <item Name='EWPDS' RelativePath='wali/wpds/ewpds/EWPDS.cpp' />
            <item Name='ERule' RelativePath='wali/wpds/ewpds/ERule.cpp' />
            <item Name='MergeFunction' RelativePath='wali/wpds/ewpds/MergeFunction.cpp' />
            <!-- Witness -->
            <item Name='Witness' RelativePath='wali/witness/Witness.cpp' />
            <item Name='WitnessExtend' RelativePath='wali/witness/WitnessExtend.cpp' />
            <item Name='WitnessCombine' RelativePath='wali/witness/WitnessCombine.cpp' />
            <item Name='WitnessRule' RelativePath='wali/witness/WitnessRule.cpp' />
            <item Name='WitnessTrans' RelativePath='wali/witness/WitnessTrans.cpp' />
            <item Name='Visitor' RelativePath='wali/witness/Visitor.cpp' />
            <item Name='VisitorDot' RelativePath='wali/witness/VisitorDot.cpp' />
            <item Name='WitnessWrapper' RelativePath='wali/witness/WitnessWrapper.cpp' />
        </InputList>
        <LibraryList>
        </LibraryList>
    </Project>

    <Project Name='pgwali' RelativePath='Source'
        OutputDir='lib' BuildDir='objects' Type='Library' >

        <Compiler Name="g++" cflags="-g -Wall -Wformat=2 -w -O2 -pg"/>
        <IncludeList>
            <item Name='WALiDir' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <!-- WALi -->
            <item Name='Common' RelativePath='wali/Common.cpp' />
            <item Name='Markable' RelativePath='wali/Markable.cpp' />
            <item Name='Printable' RelativePath='wali/Printable.cpp' />
            <item Name='SemElem' RelativePath='wali/SemElem.cpp' />
            <item Name='SemElemPair' RelativePath='wali/SemElemPair.cpp' />
            <item Name='WeightFactory' RelativePath='wali/WeightFactory.cpp' />
            <item Name='PriorityWorklist' RelativePath='wali/PriorityWorklist.cpp' />
            <item Name='TotalOrderWorklist' RelativePath='wali/TotalOrderWorklist.cpp' />
            <item Name='Key' RelativePath='wali/Key.cpp' />
            <item Name='KeySpace' RelativePath='wali/KeySpace.cpp' />
            <item Name='IntSource' RelativePath='wali/IntSource.cpp' />
            <item Name='StringSource' RelativePath='wali/StringSource.cpp' />
            <item Name='KeyPairSource' RelativePath='wali/KeyPairSource.cpp' />
            <!-- WFA -->
            <item Name='WFA' RelativePath='wali/wfa/WFA.cpp' />
            <item Name='State' RelativePath='wali/wfa/State.cpp' />
            <item Name='Trans' RelativePath='wali/wfa/Trans.cpp' />
            <item Name='TransFunctor' RelativePath='wali/wfa/TransFunctor.cpp' />
            <item Name='TransSet' RelativePath='wali/wfa/TransSet.cpp' />
            <item Name='WeightMaker' RelativePath='wali/wfa/WeightMaker.cpp' />
            <!-- WPDS -->
            <item Name='Config' RelativePath='wali/wpds/Config.cpp' />
            <item Name='Rule' RelativePath='wali/wpds/Rule.cpp' />
            <item Name='RuleFunctor' RelativePath='wali/wpds/RuleFunctor.cpp' />
            <item Name='LinkedTrans' RelativePath='wali/wpds/LinkedTrans.cpp' />
            <item Name='WPDS' RelativePath='wali/wpds/WPDS.cpp' />
            <item Name='Wrapper' RelativePath='wali/wpds/Wrapper.cpp' />
            <!-- EWPDS -->
            <item Name='EWPDS' RelativePath='wali/wpds/ewpds/EWPDS.cpp' />
            <item Name='ERule' RelativePath='wali/wpds/ewpds/ERule.cpp' />
            <item Name='MergeFunction' RelativePath='wali/wpds/ewpds/MergeFunction.cpp' />
            <!-- Witness -->
            <item Name='Witness' RelativePath='wali/witness/Witness.cpp' />
            <item Name='WitnessExtend' RelativePath='wali/witness/WitnessExtend.cpp' />
            <item Name='WitnessCombine' RelativePath='wali/witness/WitnessCombine.cpp' />
            <item Name='WitnessRule' RelativePath='wali/witness/WitnessRule.cpp' />
            <item Name='WitnessTrans' RelativePath='wali/witness/WitnessTrans.cpp' />
            <item Name='Visitor' RelativePath='wali/witness/Visitor.cpp' />
            <item Name='VisitorDot' RelativePath='wali/witness/VisitorDot.cpp' />
            <item Name='WitnessWrapper' RelativePath='wali/witness/WitnessWrapper.cpp' />
        </InputList>
        <LibraryList>
        </LibraryList>
    </Project>

    <!--
        Begin Examples
    -->
    <!-- Reach Example -->
    <Project Name='ExReach' RelativePath='Examples/Reach' OutputDir='Examples/Reach'
        BuildDir='Examples/Reach' Type='Executable' >
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='Reach' RelativePath='Reach.cpp' />
            <item Name='ExReach' RelativePath='ExReach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <Project Name='EWPDSExReach' RelativePath='Examples/Reach/ewpds' OutputDir='Examples/Reach/ewpds'
        BuildDir='Examples/Reach/ewpds' Type='Executable' >
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' RelativePath='../' />
            <item Name='ewpdsReach' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='Reach' RelativePath='../Reach.cpp' />
            <item Name='ExReach' RelativePath='ExReach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <Project Name='GenKill' RelativePath='Examples/GenKill'
        OutputDir='Examples/GenKill' BuildDir='Examples/GenKill' Type='Library'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='GenKill' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='VarSet' RelativePath='VarSet.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <Project Name='LiveVar' RelativePath='Examples/GenKill/LiveVar' Type='Executable'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='LiveVar' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='LiveVar' RelativePath='LiveVar.cpp' />
        </InputList>
        <DependencyList>
            <item Name='GenKill' />
        </DependencyList>
    </Project>

    <Project Name='UninitVar' RelativePath='Examples/GenKill/UninitVar' Type='Executable'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='UninitVar' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='UninitVar' RelativePath='UninitVar.cpp' />
        </InputList>
        <DependencyList>
            <item Name='GenKill' />
        </DependencyList>
    </Project>

    <Project Name='pgGenKill' RelativePath='Examples/GenKill'
        OutputDir='Examples/GenKill' BuildDir='Examples/GenKill' Type='Library'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -pg'/>
        <IncludeList>
            <item Name='GenKill' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='VarSet' RelativePath='VarSet.cpp' />
        </InputList>
        <DependencyList>
            <item Name='pgwali' />
        </DependencyList>
    </Project>

    <Project Name='pgLiveVar' RelativePath='Examples/GenKill/LiveVar' Type='Executable'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -pg'/>
        <IncludeList>
            <item Name='LiveVar' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='LiveVar' RelativePath='LiveVar.cpp' />
        </InputList>
        <DependencyList>
            <item Name='pgGenKill' />
        </DependencyList>
    </Project>

    <Project Name='pgUninitVar' RelativePath='Examples/GenKill/UninitVar' Type='Executable'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -pg'/>
        <IncludeList>
            <item Name='UninitVar' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='UninitVar' RelativePath='UninitVar.cpp' />
        </InputList>
        <DependencyList>
            <item Name='pgGenKill' />
        </DependencyList>
    </Project>

    <Project Name='TestMust' RelativePath='Examples/StackDelta' Type='Executable'>
        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w'/>
        <IncludeList>
            <item Name='Must' Path='$(ProjectDir)' />
        </IncludeList>
        <InputList>
            <item Name='Must' RelativePath='Must.cpp' />
            <item Name='Test' RelativePath='TestMust.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <Project Name='examples' RelativePath='Examples' Type='Empty'>
        <DependencyList>
            <item Name='ExReach' />
            <item Name='EWPDSExReach' />
            <item Name='LiveVar' />
            <!-- <item Name='UninitVar' /> -->
        </DependencyList>
    </Project>

    <!--
        End Examples
    -->

    <!--
        Begin Tests
    -->
    <!-- Test 1 -->
    <Project Name='t1' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='t1' RelativePath='t1.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test witness -->
    <Project Name='twitness' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='twitness' RelativePath='twitness.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test 3 -->
    <Project Name='t3' RelativePath='Tests'
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='t3' RelativePath='t3.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test 4 -->
    <Project Name='t4' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='t4' RelativePath='t4.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test Prune -->
    <Project Name='tprune' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='tprune' RelativePath='tprune.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test se -->
    <Project Name='tse' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='tse' RelativePath='tse.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <!-- Test se -->
    <Project Name='tTransSet' RelativePath='Tests' 
        BuildDir='Tests' OuputDir='Tests' Type='Executable' >

        <Compiler Name='g++' cflags='-g -Wall -Wformat=2 -w -O2'/>
        <IncludeList>
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach' />
        </IncludeList>
        <InputList>
            <item Name='tTransSet' RelativePath='tTransSet.cpp' />
            <item Name='Reach' Path='$(WALiDir)/Examples/Reach/Reach.cpp' />
        </InputList>
        <DependencyList>
            <item Name='wali' />
        </DependencyList>
    </Project>

    <Project Name='tests' RelativePath='Tests' Type='Empty'>
        <DependencyList>
            <item Name='t1' />
            <item Name='twitness' />
            <item Name='t3' />
            <item Name='t4' />
            <item Name='tprune' />
            <item Name='tse' />
            <item Name='tTransSet' />
        </DependencyList>
    </Project>

    <!--
        End Tests
    -->
</mkmf>
