import os, sys

Import('Debug')
Import('WaliDir')
Import('LibInstallDir')
Import('MkStatic')
Import('Platform')
Import('Is64')
Import('BuildDir')
Import('ProgEnv')

if Debug:
    print '\n+++ Entered "#/Test/ThirdParty/SConscript"\n'

ThirdParty = os.path.join(WaliDir,'Tests', 'ThirdParty')
GtestDir = 'gtest-1.6.0'

# download binary distribution archive
archive = 'gtest-1.6.0.zip'
env = ProgEnv.Clone(
    archive  = File(archive),
    mirror   = 'http://googletest.googlecode.com/files',
    url      = '$mirror/%s' % archive,
    builddir = BuildDir
    )

if not File(archive,ThirdParty).exists():
    print
    env.Execute([['curl', '--silent', '--fail', '--show-error', '--output', '$archive', '$url']])

# unpack the archive to get the good stuff out
if not File('README', os.path.join(ThirdParty, GtestDir)).exists():
    unpack = ['unzip', '-o', '-d', '$archive.dir', '$archive']
    env.Execute([unpack])

# build gtest
build_dir = os.path.join('$builddir', GtestDir)

if 'cl' == env['CC']:
    cmake_command = 'cd %s && $CMAKE -G"NMake Makefiles" %s'
    build_command = 'cd %s && nmake'
    lib_name = os.path.join(build_dir, 'gtest.lib')
else:
    cmake_command = 'cd %s && $CMAKE %s'
    build_command = 'make -C %s'
    lib_name = os.path.join(build_dir, 'libgtest.a')

lib = env.Command(lib_name,
                  [],
                  ['-mkdir %s' % build_dir,
                   cmake_command % (build_dir, os.path.join(ThirdParty, GtestDir)),
                   build_command % build_dir]
                  )
built = [(lib, os.path.join(ThirdParty, GtestDir, 'include'))]
Return('built')


