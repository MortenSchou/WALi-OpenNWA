from os.path import join
import urllib
######################
# @author: Prathmesh Prabhu

import sys
import os
import shutil

glog = 'glog-0.3.2'
lib_name = 'glog'
Import('Debug')
Import('LibInstallDir')
Import('IncludeDir')
Import('BaseEnv')

env = BaseEnv.Clone()

if Debug:
	print '\n+++ Entered "#/ThirdParty/SConscript.glog"\n'


compileCom = []
installCom = []
headerCom = []

#setup commands for build according as what files already exist
#Trying to give a coarse grained incremental build.
if not File(os.path.join(glog,'.libs','libglog.so')).exists():
  wget = "curl -O"
  targz = glog + '.tar.gz'
  compileCom = ['%s http://google-glog.googlecode.com/files/%s' % (wget,targz),
    'tar zxvf %s' %targz,
    #'autoreconf -if',
    'cd %s; ./configure --prefix=%s --libdir=%s' %(glog,join(os.getcwd(),glog),LibInstallDir),
    'cd %s; make;' %(glog)]
if not File(os.path.join(LibInstallDir,'libglog.so')).exists():
  installCom = ['cd %s; make install;' %(glog)]
includeDir = join(IncludeDir,'glog')
if not Dir(includeDir).exists(): 
  fromInc = join(os.getcwd(), glog, 'include')
  headerCom = ['rm -rf %s; cp -r %s %s;' %(includeDir,fromInc,IncludeDir)]


#The acual commands to run during the build
command = compileCom + installCom + headerCom
#lib = env.Command(lib_name, [], command)
lib = 'glog'
#I really don't know why the Command isn't working.
env.Execute(command)  
built = [(lib, IncludeDir)]
Return('built')
